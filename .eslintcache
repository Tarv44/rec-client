[{"/Users/jonahtarver/coding/thinkful/rotation-client/src/index.js":"1","/Users/jonahtarver/coding/thinkful/rotation-client/src/App/App.js":"2","/Users/jonahtarver/coding/thinkful/rotation-client/src/Nav/Nav.js":"3","/Users/jonahtarver/coding/thinkful/rotation-client/src/Signup/Signup.js":"4","/Users/jonahtarver/coding/thinkful/rotation-client/src/ValidationError.js":"5","/Users/jonahtarver/coding/thinkful/rotation-client/src/dummy-store.js":"6","/Users/jonahtarver/coding/thinkful/rotation-client/src/RotationContext.js":"7","/Users/jonahtarver/coding/thinkful/rotation-client/src/Login/Login.js":"8","/Users/jonahtarver/coding/thinkful/rotation-client/src/Footer/Footer.js":"9","/Users/jonahtarver/coding/thinkful/rotation-client/src/Landing/Landing.js":"10","/Users/jonahtarver/coding/thinkful/rotation-client/src/Dashboard/Dashboard.js":"11","/Users/jonahtarver/coding/thinkful/rotation-client/src/RecentEx/RecentEx.js":"12","/Users/jonahtarver/coding/thinkful/rotation-client/src/AddEx/AddEx.js":"13","/Users/jonahtarver/coding/thinkful/rotation-client/src/Exchange/Exchange.js":"14","/Users/jonahtarver/coding/thinkful/rotation-client/src/AllEx/AllEx.js":"15","/Users/jonahtarver/coding/thinkful/rotation-client/src/Song/Song.js":"16","/Users/jonahtarver/coding/thinkful/rotation-client/src/AddSong/AddSong.js":"17","/Users/jonahtarver/coding/thinkful/rotation-client/src/config.js":"18"},{"size":267,"mtime":1611699143608,"results":"19","hashOfConfig":"20"},{"size":2589,"mtime":1612497711145,"results":"21","hashOfConfig":"20"},{"size":635,"mtime":1611700666255,"results":"22","hashOfConfig":"20"},{"size":6974,"mtime":1612480718964,"results":"23","hashOfConfig":"20"},{"size":190,"mtime":1611704373258,"results":"24","hashOfConfig":"20"},{"size":5200,"mtime":1611948761837,"results":"25","hashOfConfig":"20"},{"size":161,"mtime":1611899447789,"results":"26","hashOfConfig":"20"},{"size":3844,"mtime":1612477250237,"results":"27","hashOfConfig":"20"},{"size":179,"mtime":1611874553166,"results":"28","hashOfConfig":"20"},{"size":1500,"mtime":1611948313791,"results":"29","hashOfConfig":"20"},{"size":657,"mtime":1611908549778,"results":"30","hashOfConfig":"20"},{"size":805,"mtime":1611904328248,"results":"31","hashOfConfig":"20"},{"size":4539,"mtime":1612497625230,"results":"32","hashOfConfig":"20"},{"size":2359,"mtime":1612496910465,"results":"33","hashOfConfig":"20"},{"size":694,"mtime":1612482281328,"results":"34","hashOfConfig":"20"},{"size":705,"mtime":1612496717264,"results":"35","hashOfConfig":"20"},{"size":2030,"mtime":1611907431191,"results":"36","hashOfConfig":"20"},{"size":64,"mtime":1612471860606,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"2gmi5x",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},"/Users/jonahtarver/coding/thinkful/rotation-client/src/index.js",[],["77","78"],"/Users/jonahtarver/coding/thinkful/rotation-client/src/App/App.js",["79"],"/Users/jonahtarver/coding/thinkful/rotation-client/src/Nav/Nav.js",[],"/Users/jonahtarver/coding/thinkful/rotation-client/src/Signup/Signup.js",["80"],"import {Component} from 'react';\nimport ValidationError from '../ValidationError';\nimport store from '../dummy-store';\nimport { NavLink } from 'react-router-dom';\nimport RotationContext from '../RotationContext';\nimport config from '../config';\nimport './Signup.css';\n\nexport default class Signup extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: {\n                value: '',\n                touched: false\n            },\n            email: {\n                value: '',\n                touched: false\n            },\n            password: {\n                value: '',\n                touched: false\n            },\n            confirmPassword: {\n                value: '',\n                touched: false\n            },\n            error: {\n                message: '',\n                failed: false\n            }\n        }\n    }\n\n    static contextType = RotationContext\n\n    updateUsername(username) {\n        this.setState({\n            username: {\n                value: username,\n                touched: true\n            }\n        })\n    }\n\n    updateEmail(email) {\n        this.setState({\n            email: {\n                value: email,\n                touched: true\n            }\n        })\n    }\n\n    updatePassword(password) {\n        this.setState({\n            password: {\n                value: password,\n                touched: true\n            }\n        })\n    }\n\n    updateConfirmPassword(confirmPassword) {\n        this.setState({\n            confirmPassword: {\n                value: confirmPassword,\n                touched: true\n            }\n        })\n    }\n\n    validateUsername() {\n        const username = this.state.username.value.trim();\n        const existingUsernames = store.users.map(user => {return user.username.toUpperCase()})\n        if (username.length === 0) {\n          return 'Username is required';\n        } else if (username.length < 3) {\n          return 'Username must be at least 3 characters long';\n        } \n    }\n\n    validateEmail() {\n        const email = this.state.email.value.trim();\n        const pattern = new RegExp(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/)\n        if(!pattern.test(email)) {\n            return 'Invalid Email'\n        }\n    }\n\n    validatePassword() {\n        const password = this.state.password.value.trim();\n        if (password.length === 0) {\n          return 'Password is required';\n        } else if (password.length < 6 || password.length > 72) {\n          return 'Password must be between 6 and 72 characters long';\n        } else if (!password.match(/[0-9]/)) {\n          return 'Password must contain at least one number';\n        }\n    }\n\n    validateConfirmPassword() {\n        const password = this.state.password.value.trim()\n        const confirmPassword = this.state.confirmPassword.value.trim()\n\n        if (password !== confirmPassword) {\n            return 'Passwords do not match.'\n        }\n    }\n\n    disableSubmit() {\n        if (\n            this.validateConfirmPassword()\n            || this.validateUsername()\n            || this.validateEmail()\n            || this.validatePassword()\n        ) {\n            return true\n        } else {\n            return false\n        }\n    }\n\n    handleSignupSubmit(e) {\n        e.preventDefault()\n\n        const headers = {\n            'content-type': 'application/json'\n        }\n\n        const body = {\n            email: this.state.email.value,\n            username: this.state.username.value,\n            password: this.state.password.value,\n        }\n\n        const options = {\n            method: 'POST',\n            headers,\n            body: JSON.stringify(body)\n        }\n\n        fetch(`${config.API_ENDPOINT}/users/`, options)\n            .then(res => {\n                if (!res.ok) {\n                    return res.json().then(err => { throw err })\n                }\n                return res.json()\n            })\n            .then(user => {\n                this.context.updateUser( user.username, user.id ) \n                this.setState({\n                    username: {\n                        value: '',\n                        touched: false\n                    },\n                    email: {\n                        value: '',\n                        touched: false\n                    },\n                    password: {\n                        value: '',\n                        touched: false\n                    },\n                    confirmPassword: {\n                        value: '',\n                        touched: false\n                    }\n                })\n                this.props.history.push('/dashboard')\n            })\n            .catch(err => {\n                this.setState({\n                    error: {\n                        message: err.error.message,\n                        failed: true\n                    }\n                })\n            })\n    }\n\n    render () {\n        return (\n            <main>\n                <form className='signup-form' onSubmit={e => this.handleSignupSubmit(e)}>\n                    <h2>Signup</h2>\n                    {this.state.error.failed && <p className='error'>{this.state.error.message}</p>}\n                    <div className='form-group'>\n                        <label htmlFor='username'>Username:</label>\n                        <input type='text' name='username' id='username' onChange={e => this.updateUsername(e.target.value)}/>\n                        {this.state.username.touched && <ValidationError message={this.validateUsername()}/>}\n                    </div>\n                    <div className='form-group'>\n                        <label htmlFor='email'>Email:</label>\n                        <input type='text' name='email' id='email' onChange={e => this.updateEmail(e.target.value)}/>\n                        {this.state.email.touched && <ValidationError message={this.validateEmail()}/>}\n                    </div>\n                    <div className='form-group'>\n                        <label htmlFor='password'>Password:</label>\n                        <input type='password' name='password' id='password' onChange={e => this.updatePassword(e.target.value)}/>\n                        {this.state.password.touched && <ValidationError message={this.validatePassword()}/>}\n                    </div>\n                    <div className='form-group'>\n                        <label htmlFor='confirmPassword'>Confirm Password:</label>\n                        <input type='password' name='confirmPassword' id='confirmPassword' onChange={e => this.updateConfirmPassword(e.target.value)}/>\n                        {this.state.confirmPassword.touched && <ValidationError message={this.validateConfirmPassword()}/>}\n                    </div>\n                    <button disabled={this.disableSubmit()} type='submit'>Signup</button>\n                    <NavLink to={'/login'}>Already have an account? Login here.</NavLink>\n                </form>\n            </main>\n        )\n    }\n}","/Users/jonahtarver/coding/thinkful/rotation-client/src/ValidationError.js",[],"/Users/jonahtarver/coding/thinkful/rotation-client/src/dummy-store.js",[],"/Users/jonahtarver/coding/thinkful/rotation-client/src/RotationContext.js",[],"/Users/jonahtarver/coding/thinkful/rotation-client/src/Login/Login.js",[],"/Users/jonahtarver/coding/thinkful/rotation-client/src/Footer/Footer.js",[],"/Users/jonahtarver/coding/thinkful/rotation-client/src/Landing/Landing.js",[],"/Users/jonahtarver/coding/thinkful/rotation-client/src/Dashboard/Dashboard.js",[],"/Users/jonahtarver/coding/thinkful/rotation-client/src/RecentEx/RecentEx.js",[],"/Users/jonahtarver/coding/thinkful/rotation-client/src/AddEx/AddEx.js",[],"/Users/jonahtarver/coding/thinkful/rotation-client/src/Exchange/Exchange.js",["81"],"/Users/jonahtarver/coding/thinkful/rotation-client/src/AllEx/AllEx.js",[],"/Users/jonahtarver/coding/thinkful/rotation-client/src/Song/Song.js",["82"],"/Users/jonahtarver/coding/thinkful/rotation-client/src/AddSong/AddSong.js",[],"/Users/jonahtarver/coding/thinkful/rotation-client/src/config.js",["83"],"export default {\n    API_ENDPOINT: 'http://localhost:8000/api'\n}",{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":14,"column":8,"nodeType":"90","messageId":"91","endLine":14,"endColumn":14},{"ruleId":"88","severity":1,"message":"92","line":76,"column":15,"nodeType":"90","messageId":"91","endLine":76,"endColumn":32},{"ruleId":"93","severity":1,"message":"94","line":70,"column":88,"nodeType":"95","messageId":"96","endLine":70,"endColumn":90},{"ruleId":"88","severity":1,"message":"97","line":1,"column":10,"nodeType":"90","messageId":"91","endLine":1,"endColumn":19},{"ruleId":"98","severity":1,"message":"99","line":1,"column":1,"nodeType":"100","endLine":3,"endColumn":2},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'moment' is defined but never used.","Identifier","unusedVar","'existingUsernames' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Component' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]